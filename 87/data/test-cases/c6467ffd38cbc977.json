{"uid":"c6467ffd38cbc977","name":"create products [Invalid category ID]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid category ID]","historyId":"2e7578de6f25a26f7f8378c6f287ff38:3ce81e2f05f0247aa4b57365110b221d","time":{"start":1730216749852,"stop":1730216749899,"duration":47},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730216749895,"stop":1730216749895,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:706)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1730216749896,"stop":1730216749896,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:706)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"41a7f66ab1033981","name":"PreRequest","source":"41a7f66ab1033981.txt","type":"text/plain","size":119},{"uid":"ce199bd97d61bceb","name":"Request Headers","source":"ce199bd97d61bceb.json","type":"application/json","size":594},{"uid":"49d3ae460504bd14","name":"Request Body","source":"49d3ae460504bd14.txt","type":"text/plain","size":1044},{"uid":"a3458aafcff2cc90","name":"Response Headers","source":"a3458aafcff2cc90.json","type":"application/json","size":562},{"uid":"832a525990576b15","name":"Response Body","source":"832a525990576b15.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1101-336"},{"name":"thread","value":"pid-2145-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"14b3fa785f77c3de","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/14b3fa785f77c3de","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1729841399512,"stop":1729841399586,"duration":74}}]},"tags":[]},"source":"c6467ffd38cbc977.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/stock/products/","401"]}
{"uid":"a800546d9485495e","name":"register invoice - empty item description","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/Register invoice#register invoice - empty item description","historyId":"bb0c9a6aaa70ae8e7285611991200d26:077503df46e8c19e168a406f8c64dfd5","time":{"start":1730216788735,"stop":1730216788776,"duration":41},"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730216788774,"stop":1730216788774,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1442)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Success message returned","time":{"start":1730216788774,"stop":1730216788774,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:2:1442)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fce084a8b5bb1032","name":"PreRequest","source":"fce084a8b5bb1032.txt","type":"text/plain","size":119},{"uid":"ed9b4c8b38e9964f","name":"Request Headers","source":"ed9b4c8b38e9964f.json","type":"application/json","size":593},{"uid":"2d7cd6ea39c8171c","name":"Request Body","source":"2d7cd6ea39c8171c.txt","type":"text/plain","size":697},{"uid":"9f8b175e83b7d090","name":"Response Headers","source":"9f8b175e83b7d090.json","type":"application/json","size":554},{"uid":"7aac0cf94464fbf9","name":"Response Body","source":"7aac0cf94464fbf9.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1101-336"},{"name":"thread","value":"pid-2145-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"Register invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"af5e5b420d9b641e","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/af5e5b420d9b641e","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1729841454168,"stop":1729841454232,"duration":64}}]},"tags":[]},"source":"a800546d9485495e.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/","401"]}
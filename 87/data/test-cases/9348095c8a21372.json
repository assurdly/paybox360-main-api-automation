{"uid":"9348095c8a21372","name":"create products [Invalid sock price]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid sock price]","historyId":"8da804ee51bde3898e4d5b6c8a865b80:3ce81e2f05f0247aa4b57365110b221d","time":{"start":1730216749713,"stop":1730216749758,"duration":45},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730216749755,"stop":1730216749755,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:703)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1730216749756,"stop":1730216749756,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:703)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"21a1e92bb6afe277","name":"PreRequest","source":"21a1e92bb6afe277.txt","type":"text/plain","size":119},{"uid":"7986b2a3843471e8","name":"Request Headers","source":"7986b2a3843471e8.json","type":"application/json","size":593},{"uid":"45970fa3f0b935cd","name":"Request Body","source":"45970fa3f0b935cd.txt","type":"text/plain","size":868},{"uid":"22094a41ce9ffddd","name":"Response Headers","source":"22094a41ce9ffddd.json","type":"application/json","size":562},{"uid":"3096d5f7b49d077","name":"Response Body","source":"3096d5f7b49d077.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1101-336"},{"name":"thread","value":"pid-2145-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"cebd933e7c7e4796","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/cebd933e7c7e4796","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1729841399306,"stop":1729841399372,"duration":66}}]},"tags":[]},"source":"9348095c8a21372.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/stock/products/","401"]}
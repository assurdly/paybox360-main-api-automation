{"uid":"641a3dbaa41841ad","name":"register invoice - Invalid tax id","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/Register invoice#register invoice - Invalid tax id","historyId":"ad052693ffbbcbb14efdb2f061595e38:077503df46e8c19e168a406f8c64dfd5","time":{"start":1730216789013,"stop":1730216789053,"duration":40},"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730216789051,"stop":1730216789051,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1447)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Success message returned","time":{"start":1730216789051,"stop":1730216789051,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:2:1447)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"20f4e90cc1cfee39","name":"PreRequest","source":"20f4e90cc1cfee39.txt","type":"text/plain","size":119},{"uid":"d879c440abdc0ab2","name":"Request Headers","source":"d879c440abdc0ab2.json","type":"application/json","size":593},{"uid":"947312d020366016","name":"Request Body","source":"947312d020366016.txt","type":"text/plain","size":711},{"uid":"528acd6625e6d151","name":"Response Headers","source":"528acd6625e6d151.json","type":"application/json","size":554},{"uid":"62c2770a49aeefb5","name":"Response Body","source":"62c2770a49aeefb5.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1101-336"},{"name":"thread","value":"pid-2145-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"Register invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"ec42a041dea6abf1","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/ec42a041dea6abf1","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1729841454503,"stop":1729841454569,"duration":66}}]},"tags":[]},"source":"641a3dbaa41841ad.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/","401"]}
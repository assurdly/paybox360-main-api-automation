{"uid":"731d85fc8069408f","name":"paid and due-Invalid result type","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/company/Paid and Due Analytics#paid and due-Invalid result type","historyId":"2affe7dfb9c5850796eff9d8392d7fdd:8bdeef1ed522400a88b1d0954be6376c","time":{"start":1730216787933,"stop":1730216787979,"duration":46},"status":"failed","statusMessage":"Status code is 400, Respons returns the right data","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Respons returns the right data","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730216787975,"stop":1730216787975,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1425)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Respons returns the right data","time":{"start":1730216787976,"stop":1730216787976,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'details')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'details')\n   at Object.eval sandbox-script.js:2:1425)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4fc087a1dc3c5951","name":"PreRequest","source":"4fc087a1dc3c5951.txt","type":"text/plain","size":119},{"uid":"ec7daa1a623e92a","name":"Request Headers","source":"ec7daa1a623e92a.json","type":"application/json","size":524},{"uid":"c754c5a7f1e7b983","name":"Response Headers","source":"c754c5a7f1e7b983.json","type":"application/json","size":548},{"uid":"3e20a4941f20bb80","name":"Response Body","source":"3e20a4941f20bb80.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1101-336"},{"name":"thread","value":"pid-2145-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"company > Paid and Due Analytics"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://requisitiondev.libertypayng.com/api/v1/invoicing/company_analytics?company=&result_type=this_year1"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"562efe471f7f10d4","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/562efe471f7f10d4","status":"failed","statusDetails":"Status code is 400, Respons returns the right data","time":{"start":1729841453004,"stop":1729841453072,"duration":68}}]},"tags":[]},"source":"731d85fc8069408f.json","parameterValues":["GET - https://requisitiondev.libertypayng.com/api/v1/invoicing/company_analytics?company=&result_type=this_year1","401"]}
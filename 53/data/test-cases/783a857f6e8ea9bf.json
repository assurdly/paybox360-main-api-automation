{"uid":"783a857f6e8ea9bf","name":"fetch branch histories [Success]","fullName":"PayBox-360 - QA AUTOMATION/Stock/histories/Fetch branch histories#fetch branch histories [Success]","historyId":"db512930f3bb40f4d6a0955e70f24e47:82f622ab29d4cd984b2f3fddc6e4b966","time":{"start":1726682774597,"stop":1726682774691,"duration":94},"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Stock histories array exists and is not empty, First stock history item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Stock histories array exists and is not empty, First stock history item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 200","time":{"start":1726682774685,"stop":1726682774685,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:530)","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1726682774686,"stop":1726682774686,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:530)","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentStep":false},{"name":"Response status_code is 200","time":{"start":1726682774686,"stop":1726682774686,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 200","statusTrace":"AssertionError: expected undefined to deeply equal 200\n   at Object.eval sandbox-script.js:3:530)","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentStep":false},{"name":"Response data contains message","time":{"start":1726682774687,"stop":1726682774687,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:4:530)","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentStep":false},{"name":"Stock histories array exists and is not empty","time":{"start":1726682774688,"stop":1726682774688,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:5:530)","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentStep":false},{"name":"First stock history item structure is correct","time":{"start":1726682774688,"stop":1726682774688,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'stock_histories')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'stock_histories')\n   at Object.eval sandbox-script.js:6:530)","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentStep":false}],"attachments":[{"uid":"6a265f1fad220004","name":"PreRequest","source":"6a265f1fad220004.txt","type":"text/plain","size":119},{"uid":"7a57a7565d0c63b9","name":"Request Headers","source":"7a57a7565d0c63b9.json","type":"application/json","size":325},{"uid":"563e2a902ffb1e60","name":"Response Headers","source":"563e2a902ffb1e60.json","type":"application/json","size":556},{"uid":"5636f4afdee36176","name":"Response Body","source":"5636f4afdee36176.txt","type":"text/plain","size":183}],"parameters":[],"attachmentsCount":4,"hasContent":true,"stepsCount":6,"shouldDisplayMessage":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az968-153"},{"name":"thread","value":"pid-2068-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"histories > Fetch branch histories"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://management.libertypayng.com/api/v1/stock/histories?company=14cfce55-5a04-4c12-a8b9-9e846ae2a9ba&branch=6f6767af-cf12-4300-96e2-6004dad36aba"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"783a857f6e8ea9bf.json","parameterValues":["GET - https://management.libertypayng.com/api/v1/stock/histories?company=14cfce55-5a04-4c12-a8b9-9e846ae2a9ba&branch=6f6767af-cf12-4300-96e2-6004dad36aba","401"]}
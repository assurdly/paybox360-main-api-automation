{"uid":"f4399a6217146da","name":"register invoice - Negative payment amount","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/Register invoice#register invoice - Negative payment amount","historyId":"a110ecb8cab469581da685ad2fb92561:dab804bc212aa627a9b9242cecfeea31","time":{"start":1740552837989,"stop":1740552838092,"duration":103},"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 201, status: Created","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 201, status: Created","steps":[{"name":"Status code is 400","time":{"start":1740552838090,"stop":1740552838090,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 201","statusTrace":"AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:1922)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is returned","time":{"start":1740552838090,"stop":1740552838090,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'details')","statusTrace":"TypeError: Cannot read properties of null (reading 'details')\n   at Object.eval sandbox-script.js:2:1922)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a073b6617d7ac3aa","name":"PreRequest","source":"a073b6617d7ac3aa.txt","type":"text/plain","size":119},{"uid":"e91d34ed67d63a1d","name":"Request Headers","source":"e91d34ed67d63a1d.json","type":"application/json","size":649},{"uid":"ac72aad834b828cf","name":"Request Body","source":"ac72aad834b828cf.txt","type":"text/plain","size":784},{"uid":"d8be428f297d33ed","name":"Response Headers","source":"d8be428f297d33ed.json","type":"application/json","size":425},{"uid":"f20e4d88ebd07909","name":"Response Body","source":"f20e4d88ebd07909.txt","type":"text/plain","size":320}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1696-950"},{"name":"thread","value":"pid-2368-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"Register invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/invoicing/invoices/"},{"name":"Response Code","value":"201"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"f8dd5d3fa2c7083b","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/147//#testresult/f8dd5d3fa2c7083b","status":"failed","statusDetails":"Status code is 400, Error message is returned","time":{"start":1740552331741,"stop":1740552331819,"duration":78}},{"uid":"52d53f5b251f9ad6","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/146//#testresult/52d53f5b251f9ad6","status":"failed","statusDetails":"Status code is 400, Error message is returned","time":{"start":1740513040803,"stop":1740513040898,"duration":95}}]},"tags":[]},"source":"f4399a6217146da.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/invoicing/invoices/","201"]}
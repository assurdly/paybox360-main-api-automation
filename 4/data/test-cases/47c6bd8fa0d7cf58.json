{"uid":"47c6bd8fa0d7cf58","name":"inventory status summary","fullName":"stock/inventory/status/Inventory status summary#inventory status summary","historyId":"772c0be9143752c3ee15ce016ba9d3ae:afef49501a2044abd1d9dd8b281d4005","time":{"start":1721771416984,"stop":1721771417058,"duration":74},"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Inventory status array exists and is not empty, First inventory status item structure is correct, Count and total_inventory_status are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Inventory status array exists and is not empty, First inventory status item structure is correct, Count and total_inventory_status are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 200","time":{"start":1721771417051,"stop":1721771417051,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:166)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Response status is success","time":{"start":1721771417052,"stop":1721771417052,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:166)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Response status_code is 200","time":{"start":1721771417053,"stop":1721771417053,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 200","statusTrace":"AssertionError: expected undefined to deeply equal 200\n   at Object.eval sandbox-script.js:3:166)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Response data contains message","time":{"start":1721771417054,"stop":1721771417054,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:4:166)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Inventory status array exists and is not empty","time":{"start":1721771417054,"stop":1721771417054,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:5:166)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"First inventory status item structure is correct","time":{"start":1721771417055,"stop":1721771417055,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'inventory_status')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'inventory_status')\n   at Object.eval sandbox-script.js:6:166)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Count and total_inventory_status are correct","time":{"start":1721771417056,"stop":1721771417056,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:7:166)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[{"uid":"357513acb731b002","name":"PreRequest","source":"357513acb731b002.txt","type":"text/plain","size":119},{"uid":"87a21626c1899313","name":"Request Headers","source":"87a21626c1899313.json","type":"application/json","size":325},{"uid":"d5cf408fa513514b","name":"Response Headers","source":"d5cf408fa513514b.json","type":"application/json","size":556},{"uid":"c872e3577dfa391e","name":"Response Body","source":"c872e3577dfa391e.txt","type":"text/plain","size":183}],"parameters":[],"stepsCount":7,"attachmentsCount":4,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"stock"},{"name":"suite","value":"inventory"},{"name":"subSuite","value":"status > Inventory status summary"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://management.libertypayng.com/api/v1/stock/inventory_summary?company=&branch=null"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"90dcbac77959a2da","reportUrl":"https://assurdly.github.io/Paybox360_Instant_Web/3//#testresult/90dcbac77959a2da","status":"failed","statusDetails":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Inventory status array exists and is not empty, First inventory status item structure is correct, Count and total_inventory_status are correct","time":{"start":1721636332359,"stop":1721636332462,"duration":103}},{"uid":"afee4e2f93620c","reportUrl":"https://assurdly.github.io/Paybox360_Instant_Web/2//#testresult/afee4e2f93620c","status":"failed","statusDetails":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Inventory status array exists and is not empty, First inventory status item structure is correct, Count and total_inventory_status are correct","time":{"start":1721634596360,"stop":1721634596385,"duration":25}},{"uid":"84cdccbef40eb144","reportUrl":"https://assurdly.github.io/Paybox360_Instant_Web/1//#testresult/84cdccbef40eb144","status":"failed","statusDetails":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Inventory status array exists and is not empty, First inventory status item structure is correct, Count and total_inventory_status are correct","time":{"start":1721634136331,"stop":1721634136423,"duration":92}},{"uid":"fcb0c5574f262e42","reportUrl":"https://assurdly.github.io/Paybox360_Instant_Web/1//#testresult/fcb0c5574f262e42","status":"failed","statusDetails":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Inventory status array exists and is not empty, First inventory status item structure is correct, Count and total_inventory_status are correct","time":{"start":1721633774494,"stop":1721633774528,"duration":34}}]},"tags":[]},"source":"47c6bd8fa0d7cf58.json","parameterValues":["GET - https://management.libertypayng.com/api/v1/stock/inventory_summary?company=&branch=null","401"]}
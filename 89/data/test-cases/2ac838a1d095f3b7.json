{"uid":"2ac838a1d095f3b7","name":"register - Invalid email adress","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/clients/Register client invoice#register - Invalid email adress","historyId":"dfaa0d7315bcd028f78e53a358d9037f:27094fc60cb7001f1e9766251ace18c1","time":{"start":1730484449266,"stop":1730484449365,"duration":99},"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730484449360,"stop":1730484449360,"duration":0},"status":"failed","statusMessage":"expected 401 to be one of [ 400, 422 ]","statusTrace":"AssertionError: expected 401 to be one of [ 400, 422 ]\n   at Object.eval sandbox-script.js:1:1380)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is returned","time":{"start":1730484449360,"stop":1730484449360,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:2:1380)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"83f434e30d819875","name":"PreRequest","source":"83f434e30d819875.txt","type":"text/plain","size":119},{"uid":"2c4c940f2e1167f1","name":"Request Headers","source":"2c4c940f2e1167f1.json","type":"application/json","size":593},{"uid":"53fd310651c5144c","name":"Request Body","source":"53fd310651c5144c.txt","type":"text/plain","size":254},{"uid":"eb42c25b40c6e3c0","name":"Response Headers","source":"eb42c25b40c6e3c0.json","type":"application/json","size":561},{"uid":"783a2706ae508e6f","name":"Response Body","source":"783a2706ae508e6f.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1424-510"},{"name":"thread","value":"pid-2033-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"clients > Register client invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/clients/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"c42987baf819eef5","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/88//#testresult/c42987baf819eef5","status":"failed","statusDetails":"Status code is 400, Error message is returned","time":{"start":1730311508094,"stop":1730311508124,"duration":30}},{"uid":"a56123d3b81b4d73","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/87//#testresult/a56123d3b81b4d73","status":"failed","statusDetails":"Status code is 400, Error message is returned","time":{"start":1730216785708,"stop":1730216785752,"duration":44}},{"uid":"1dbe58f24e28ab40","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/1dbe58f24e28ab40","status":"failed","statusDetails":"Status code is 400, Error message is returned","time":{"start":1729841449704,"stop":1729841449767,"duration":63}}]},"tags":[]},"source":"2ac838a1d095f3b7.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/clients/","401"]}
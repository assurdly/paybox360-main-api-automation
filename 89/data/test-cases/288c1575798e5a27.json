{"uid":"288c1575798e5a27","name":"register invoice - Invalid quantity value","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/Register invoice#register invoice - Invalid quantity value","historyId":"b59eee937ff9157c0f8760c4523f63c8:077503df46e8c19e168a406f8c64dfd5","time":{"start":1730484456321,"stop":1730484456419,"duration":98},"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730484456415,"stop":1730484456415,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1445)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Success message returned","time":{"start":1730484456415,"stop":1730484456415,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '1')","statusTrace":"TypeError: Cannot read properties of undefined (reading '1')\n   at Object.eval sandbox-script.js:2:1445)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a4cbfed61a17ac9f","name":"PreRequest","source":"a4cbfed61a17ac9f.txt","type":"text/plain","size":119},{"uid":"ccae499cedf86d2a","name":"Request Headers","source":"ccae499cedf86d2a.json","type":"application/json","size":593},{"uid":"aa0ab4f9c1f41ce0","name":"Request Body","source":"aa0ab4f9c1f41ce0.txt","type":"text/plain","size":512},{"uid":"868e10c71e513f42","name":"Response Headers","source":"868e10c71e513f42.json","type":"application/json","size":554},{"uid":"de5140a0678a137c","name":"Response Body","source":"de5140a0678a137c.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1424-510"},{"name":"thread","value":"pid-2033-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"Register invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"a4e83ec1ec99fb0b","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/88//#testresult/a4e83ec1ec99fb0b","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1730311510233,"stop":1730311510262,"duration":29}},{"uid":"952c19fc023937cf","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/87//#testresult/952c19fc023937cf","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1730216788923,"stop":1730216788966,"duration":43}},{"uid":"b7deba9a025d8650","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/b7deba9a025d8650","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1729841454368,"stop":1729841454433,"duration":65}}]},"tags":[]},"source":"288c1575798e5a27.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/","401"]}
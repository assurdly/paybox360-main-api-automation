{"uid":"293a1d967de49706","name":"register invoice - Invalid branch","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/Register invoice#register invoice - Invalid branch","historyId":"818631a1f9b40a8e655bc91abf6ec3dc:077503df46e8c19e168a406f8c64dfd5","time":{"start":1730484456422,"stop":1730484456526,"duration":104},"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730484456523,"stop":1730484456524,"duration":1},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1446)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Success message returned","time":{"start":1730484456524,"stop":1730484456524,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:2:1446)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fec65daf9a14846","name":"PreRequest","source":"fec65daf9a14846.txt","type":"text/plain","size":119},{"uid":"b8596d864107cb22","name":"Request Headers","source":"b8596d864107cb22.json","type":"application/json","size":593},{"uid":"f8ea8d80f18f6453","name":"Request Body","source":"f8ea8d80f18f6453.txt","type":"text/plain","size":716},{"uid":"1c21dcdcb9edf8b9","name":"Response Headers","source":"1c21dcdcb9edf8b9.json","type":"application/json","size":554},{"uid":"1db87d19beb0ee6f","name":"Response Body","source":"1db87d19beb0ee6f.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1424-510"},{"name":"thread","value":"pid-2033-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"Register invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"12cb6446421c694d","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/88//#testresult/12cb6446421c694d","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1730311510264,"stop":1730311510292,"duration":28}},{"uid":"4be6a5eef82bde7c","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/87//#testresult/4be6a5eef82bde7c","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1730216788969,"stop":1730216789010,"duration":41}},{"uid":"5a61cff224291e6c","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/5a61cff224291e6c","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1729841454436,"stop":1729841454500,"duration":64}}]},"tags":[]},"source":"293a1d967de49706.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/","401"]}
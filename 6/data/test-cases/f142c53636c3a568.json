{"uid":"f142c53636c3a568","name":"create price list [Success]","fullName":"stock/price list/Create price list#create price list [Success]","historyId":"70c5354126cc5908e2c49c3832406229:492493917734de00c61b8c5ff72dab12","time":{"start":1722018821375,"stop":1722018821476,"duration":101},"status":"failed","statusMessage":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 201","time":{"start":1722018821471,"stop":1722018821471,"duration":0},"status":"failed","statusMessage":"expected response to have status code 201 but got 401","statusTrace":"AssertionError: expected response to have status code 201 but got 401\n   at Object.eval sandbox-script.js:1:188)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1722018821472,"stop":1722018821472,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:188)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status_code is 201","time":{"start":1722018821472,"stop":1722018821472,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 201","statusTrace":"AssertionError: expected undefined to deeply equal 201\n   at Object.eval sandbox-script.js:3:188)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response message is correct","time":{"start":1722018821473,"stop":1722018821473,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'message')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'message')\n   at Object.eval sandbox-script.js:4:188)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Price lists array exists and is not empty","time":{"start":1722018821473,"stop":1722018821473,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:5:188)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"First price list item structure is correct","time":{"start":1722018821474,"stop":1722018821474,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'price_lists')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'price_lists')\n   at Object.eval sandbox-script.js:6:188)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"650e9584b114dc8e","name":"PreRequest","source":"650e9584b114dc8e.txt","type":"text/plain","size":119},{"uid":"fa31c81600502bc2","name":"Request Headers","source":"fa31c81600502bc2.json","type":"application/json","size":394},{"uid":"f4a9967d421b2fd2","name":"Request Body","source":"f4a9967d421b2fd2.txt","type":"text/plain","size":525},{"uid":"ab559d0b774b5d37","name":"Response Headers","source":"ab559d0b774b5d37.json","type":"application/json","size":569},{"uid":"3fe7695915f30a90","name":"Response Body","source":"3fe7695915f30a90.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"stock"},{"name":"suite","value":"price list"},{"name":"subSuite","value":"Create price list"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/price_list/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"8744c8c2e44616d6","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/5//#testresult/8744c8c2e44616d6","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1721846297039,"stop":1721846297142,"duration":103}},{"uid":"1e58ff9f1152c924","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/4//#testresult/1e58ff9f1152c924","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1721771418588,"stop":1721771418662,"duration":74}},{"uid":"d20c93324a65044","reportUrl":"https://assurdly.github.io/Paybox360_Instant_Web/3//#testresult/d20c93324a65044","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1721636334627,"stop":1721636334728,"duration":101}},{"uid":"9299aeaf49ab0cb","reportUrl":"https://assurdly.github.io/Paybox360_Instant_Web/2//#testresult/9299aeaf49ab0cb","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1721634596980,"stop":1721634597005,"duration":25}},{"uid":"88ccd3aadfa711ee","reportUrl":"https://assurdly.github.io/Paybox360_Instant_Web/1//#testresult/88ccd3aadfa711ee","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1721634138405,"stop":1721634138500,"duration":95}},{"uid":"79e8d4e5c1520b15","reportUrl":"https://assurdly.github.io/Paybox360_Instant_Web/1//#testresult/79e8d4e5c1520b15","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1721633775129,"stop":1721633775157,"duration":28}}]},"tags":[]},"source":"f142c53636c3a568.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/price_list/","401"]}
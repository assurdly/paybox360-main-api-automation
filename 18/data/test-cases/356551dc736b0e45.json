{"uid":"356551dc736b0e45","name":"create products [Invalid selling price]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid selling price]","historyId":"0938a9747d7423d13e8527880a74114f:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723406684394,"stop":1723406684432,"duration":38},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723406684427,"stop":1723406684427,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:558)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723406684428,"stop":1723406684428,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:558)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"92a03f3397116de5","name":"PreRequest","source":"92a03f3397116de5.txt","type":"text/plain","size":119},{"uid":"cfe2808c5d4823b6","name":"Request Headers","source":"cfe2808c5d4823b6.json","type":"application/json","size":394},{"uid":"57e836aa6f4f6c97","name":"Request Body","source":"57e836aa6f4f6c97.txt","type":"text/plain","size":939},{"uid":"6a0a8ec28c3512e7","name":"Response Headers","source":"6a0a8ec28c3512e7.json","type":"application/json","size":570},{"uid":"ebb7c81fa8804271","name":"Response Body","source":"ebb7c81fa8804271.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"9a4362afb47d5f78","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/17//#testresult/9a4362afb47d5f78","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723328064307,"stop":1723328064408,"duration":101}}]},"tags":[]},"source":"356551dc736b0e45.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
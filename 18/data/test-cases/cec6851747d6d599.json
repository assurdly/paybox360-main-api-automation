{"uid":"cec6851747d6d599","name":"create products [Invalid category ID]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid category ID]","historyId":"2e7578de6f25a26f7f8378c6f287ff38:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723406684503,"stop":1723406684529,"duration":26},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723406684527,"stop":1723406684527,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:560)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723406684528,"stop":1723406684528,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:560)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b85275e537a1cc26","name":"PreRequest","source":"b85275e537a1cc26.txt","type":"text/plain","size":119},{"uid":"155343745a8492d9","name":"Request Headers","source":"155343745a8492d9.json","type":"application/json","size":395},{"uid":"cb0df9e3427174b8","name":"Request Body","source":"cb0df9e3427174b8.txt","type":"text/plain","size":1115},{"uid":"bfc2cca50e804d7","name":"Response Headers","source":"bfc2cca50e804d7.json","type":"application/json","size":570},{"uid":"7aec2e8e61d9b47d","name":"Response Body","source":"7aec2e8e61d9b47d.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"20a88c1cbb02c97","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/17//#testresult/20a88c1cbb02c97","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723328064511,"stop":1723328064612,"duration":101}}]},"tags":[]},"source":"cec6851747d6d599.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
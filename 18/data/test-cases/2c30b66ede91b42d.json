{"uid":"2c30b66ede91b42d","name":"create products [Invalid sock price]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid sock price]","historyId":"8da804ee51bde3898e4d5b6c8a865b80:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723406684365,"stop":1723406684391,"duration":26},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723406684388,"stop":1723406684388,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:557)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723406684389,"stop":1723406684389,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:557)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"36f1760fa7450575","name":"PreRequest","source":"36f1760fa7450575.txt","type":"text/plain","size":119},{"uid":"1926d59585e934cc","name":"Request Headers","source":"1926d59585e934cc.json","type":"application/json","size":394},{"uid":"6a3fc6ac76b7a4b9","name":"Request Body","source":"6a3fc6ac76b7a4b9.txt","type":"text/plain","size":942},{"uid":"dfb37751c14d99a9","name":"Response Headers","source":"dfb37751c14d99a9.json","type":"application/json","size":570},{"uid":"607c559ef8f8081c","name":"Response Body","source":"607c559ef8f8081c.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"9f02894abad126b7","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/17//#testresult/9f02894abad126b7","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723328064206,"stop":1723328064304,"duration":98}}]},"tags":[]},"source":"2c30b66ede91b42d.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
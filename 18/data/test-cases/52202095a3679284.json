{"uid":"52202095a3679284","name":"fetch branch histories [Invalid Auth]","fullName":"PayBox-360 - QA AUTOMATION/Stock/histories/Fetch branch histories#fetch branch histories [Invalid Auth]","historyId":"2e52cb5dfbdfe0202cb4b45549a6cae5:cb59f11cdce00fd49a44539b47fe9d51","time":{"start":1723406682726,"stop":1723406682757,"duration":31},"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Stock histories array exists and is not empty, First stock history item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Stock histories array exists and is not empty, First stock history item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 200","time":{"start":1723406682752,"stop":1723406682752,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:505)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1723406682752,"stop":1723406682753,"duration":1},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:505)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status_code is 200","time":{"start":1723406682753,"stop":1723406682753,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 200","statusTrace":"AssertionError: expected undefined to deeply equal 200\n   at Object.eval sandbox-script.js:3:505)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response data contains message","time":{"start":1723406682754,"stop":1723406682754,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:4:505)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Stock histories array exists and is not empty","time":{"start":1723406682754,"stop":1723406682754,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:5:505)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"First stock history item structure is correct","time":{"start":1723406682755,"stop":1723406682755,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'stock_histories')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'stock_histories')\n   at Object.eval sandbox-script.js:6:505)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6e1e1d04d0fbf177","name":"PreRequest","source":"6e1e1d04d0fbf177.txt","type":"text/plain","size":119},{"uid":"4ca91a7715c57dd1","name":"Request Headers","source":"4ca91a7715c57dd1.json","type":"application/json","size":325},{"uid":"8ac54316a4a51e0f","name":"Response Headers","source":"8ac54316a4a51e0f.json","type":"application/json","size":556},{"uid":"76a946215aa49e2a","name":"Response Body","source":"76a946215aa49e2a.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"histories > Fetch branch histories"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://management.libertypayng.com/api/v1/stock/histories?company=07dda66c-d152-45ee-8f81-557b71ce1080&branch=87bed193-bf4a-4c72-b164-316e0c04de70"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"52202095a3679284.json","parameterValues":["GET - https://management.libertypayng.com/api/v1/stock/histories?company=07dda66c-d152-45ee-8f81-557b71ce1080&branch=87bed193-bf4a-4c72-b164-316e0c04de70","401"]}
{"uid":"c933af5a9470ed41","name":"create price list [Success]","fullName":"PayBox-360 - QA AUTOMATION/stock/price list/Create price list#create price list [Success]","historyId":"10fb1e69d3b8f8ce7adb08814a017d98:492493917734de00c61b8c5ff72dab12","time":{"start":1723228556486,"stop":1723228556516,"duration":30},"status":"failed","statusMessage":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 201","time":{"start":1723228556511,"stop":1723228556511,"duration":0},"status":"failed","statusMessage":"expected response to have status code 201 but got 401","statusTrace":"AssertionError: expected response to have status code 201 but got 401\n   at Object.eval sandbox-script.js:1:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1723228556511,"stop":1723228556511,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status_code is 201","time":{"start":1723228556512,"stop":1723228556512,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 201","statusTrace":"AssertionError: expected undefined to deeply equal 201\n   at Object.eval sandbox-script.js:3:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response message is correct","time":{"start":1723228556512,"stop":1723228556512,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'message')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'message')\n   at Object.eval sandbox-script.js:4:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Price lists array exists and is not empty","time":{"start":1723228556513,"stop":1723228556513,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:5:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"First price list item structure is correct","time":{"start":1723228556513,"stop":1723228556513,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'price_lists')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'price_lists')\n   at Object.eval sandbox-script.js:6:528)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9e4ce7ea21cf8033","name":"PreRequest","source":"9e4ce7ea21cf8033.txt","type":"text/plain","size":119},{"uid":"4b41e23d99c280d1","name":"Request Headers","source":"4b41e23d99c280d1.json","type":"application/json","size":394},{"uid":"9017024438b512a1","name":"Request Body","source":"9017024438b512a1.txt","type":"text/plain","size":495},{"uid":"97e15dac5de5059a","name":"Response Headers","source":"97e15dac5de5059a.json","type":"application/json","size":569},{"uid":"e22fe019b02eb567","name":"Response Body","source":"e22fe019b02eb567.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"stock"},{"name":"subSuite","value":"price list > Create price list"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/price_list/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"934f7678cc94b8fe","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/15//#testresult/934f7678cc94b8fe","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1723055893868,"stop":1723055893952,"duration":84}}]},"tags":[]},"source":"c933af5a9470ed41.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/price_list/","401"]}
{"uid":"60c55d2516272cac","name":"create products [Invalid selling price]","fullName":"PayBox-360 - QA AUTOMATION/stock/products/Create products#create products [Invalid selling price]","historyId":"ba9339097a4809bfbac4e77c0023ba26:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723228557373,"stop":1723228557400,"duration":27},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723228557397,"stop":1723228557397,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:558)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723228557398,"stop":1723228557398,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:558)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6e2a0f55d29f478f","name":"PreRequest","source":"6e2a0f55d29f478f.txt","type":"text/plain","size":119},{"uid":"bd79ea84ad99aed4","name":"Request Headers","source":"bd79ea84ad99aed4.json","type":"application/json","size":394},{"uid":"f7f42ef4499a4ba2","name":"Request Body","source":"f7f42ef4499a4ba2.txt","type":"text/plain","size":869},{"uid":"7652e5aa035b3e9","name":"Response Headers","source":"7652e5aa035b3e9.json","type":"application/json","size":570},{"uid":"8b877a1b2f378e4a","name":"Response Body","source":"8b877a1b2f378e4a.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"78adb43a1e505d75","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/15//#testresult/78adb43a1e505d75","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723055896337,"stop":1723055896417,"duration":80}}]},"tags":[]},"source":"60c55d2516272cac.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
{"uid":"142c68d6788f41bd","name":"create products [Invalid category ID]","fullName":"PayBox-360 - QA AUTOMATION/stock/products/Create products#create products [Invalid category ID]","historyId":"5900b307c391699805ed69c990db8186:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723228557431,"stop":1723228557457,"duration":26},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723228557455,"stop":1723228557455,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:560)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723228557455,"stop":1723228557455,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:560)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"98dde12983587b73","name":"PreRequest","source":"98dde12983587b73.txt","type":"text/plain","size":119},{"uid":"24a749622da09fd4","name":"Request Headers","source":"24a749622da09fd4.json","type":"application/json","size":395},{"uid":"89e2d9e871459fe1","name":"Request Body","source":"89e2d9e871459fe1.txt","type":"text/plain","size":1042},{"uid":"a7fb6f07f82b0e61","name":"Response Headers","source":"a7fb6f07f82b0e61.json","type":"application/json","size":570},{"uid":"7061613c8c1ce032","name":"Response Body","source":"7061613c8c1ce032.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"9431e8284a2188ee","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/15//#testresult/9431e8284a2188ee","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723055896510,"stop":1723055896588,"duration":78}}]},"tags":[]},"source":"142c68d6788f41bd.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
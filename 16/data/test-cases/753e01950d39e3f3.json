{"uid":"753e01950d39e3f3","name":"create products [Invalid sock price]","fullName":"PayBox-360 - QA AUTOMATION/stock/products/Create products#create products [Invalid sock price]","historyId":"32b2d016c2b43d36f82ef8db5b0b2c7b:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723228557345,"stop":1723228557370,"duration":25},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723228557368,"stop":1723228557368,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:557)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723228557369,"stop":1723228557369,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:557)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5feb33c9d2c5f7c9","name":"PreRequest","source":"5feb33c9d2c5f7c9.txt","type":"text/plain","size":119},{"uid":"32b771af006a22b6","name":"Request Headers","source":"32b771af006a22b6.json","type":"application/json","size":394},{"uid":"86d2bdaaa55ca37","name":"Request Body","source":"86d2bdaaa55ca37.txt","type":"text/plain","size":874},{"uid":"1b244b02fc465fab","name":"Response Headers","source":"1b244b02fc465fab.json","type":"application/json","size":570},{"uid":"b070e06b12a745c5","name":"Response Body","source":"b070e06b12a745c5.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"325332286c8bd002","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/15//#testresult/325332286c8bd002","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723055896254,"stop":1723055896334,"duration":80}}]},"tags":[]},"source":"753e01950d39e3f3.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
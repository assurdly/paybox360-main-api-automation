{"uid":"4276f6e64dd23a77","name":"create products [Invalid Company ID]","fullName":"PayBox-360 - QA AUTOMATION/stock/products/Create products#create products [Invalid Company ID]","historyId":"e2155102536a0d721de679b118fce845:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723228557402,"stop":1723228557428,"duration":26},"status":"failed","statusMessage":"Status code is 400, Validate error message for company UUID format","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Validate error message for company UUID format","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723228557426,"stop":1723228557426,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:559)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validate error message for company UUID format","time":{"start":1723228557427,"stop":1723228557427,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'company'","statusTrace":"AssertionError: expected { …(3) } to have property 'company'\n   at Object.eval sandbox-script.js:2:559)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"465be6b5ab05e6e2","name":"PreRequest","source":"465be6b5ab05e6e2.txt","type":"text/plain","size":119},{"uid":"72e4c80986a7428","name":"Request Headers","source":"72e4c80986a7428.json","type":"application/json","size":395},{"uid":"d8e274ba09772da9","name":"Request Body","source":"d8e274ba09772da9.txt","type":"text/plain","size":1049},{"uid":"3281723454991754","name":"Response Headers","source":"3281723454991754.json","type":"application/json","size":570},{"uid":"19c05a9d51f4bc02","name":"Response Body","source":"19c05a9d51f4bc02.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"bb322361e263dcb5","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/15//#testresult/bb322361e263dcb5","status":"failed","statusDetails":"Status code is 400, Validate error message for company UUID format","time":{"start":1723055896419,"stop":1723055896507,"duration":88}}]},"tags":[]},"source":"4276f6e64dd23a77.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
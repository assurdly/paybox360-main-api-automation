{"uid":"89c2c604ed6aecb9","name":"fetch branch histories [Success]","fullName":"PayBox-360 - QA AUTOMATION/Stock/histories/Fetch branch histories#fetch branch histories [Success]","historyId":"db512930f3bb40f4d6a0955e70f24e47:7383774e9328e5205b26c43acf5fc438","time":{"start":1726423258053,"stop":1726423258087,"duration":34},"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Stock histories array exists and is not empty, First stock history item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Stock histories array exists and is not empty, First stock history item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 200","time":{"start":1726423258081,"stop":1726423258081,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:530)","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":true,"attachmentsCount":0,"stepsCount":0,"shouldDisplayMessage":true},{"name":"Response status is success","time":{"start":1726423258082,"stop":1726423258082,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:530)","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":true,"attachmentsCount":0,"stepsCount":0,"shouldDisplayMessage":true},{"name":"Response status_code is 200","time":{"start":1726423258082,"stop":1726423258082,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 200","statusTrace":"AssertionError: expected undefined to deeply equal 200\n   at Object.eval sandbox-script.js:3:530)","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":true,"attachmentsCount":0,"stepsCount":0,"shouldDisplayMessage":true},{"name":"Response data contains message","time":{"start":1726423258083,"stop":1726423258083,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:4:530)","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":true,"attachmentsCount":0,"stepsCount":0,"shouldDisplayMessage":true},{"name":"Stock histories array exists and is not empty","time":{"start":1726423258083,"stop":1726423258083,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:5:530)","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":true,"attachmentsCount":0,"stepsCount":0,"shouldDisplayMessage":true},{"name":"First stock history item structure is correct","time":{"start":1726423258084,"stop":1726423258084,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'stock_histories')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'stock_histories')\n   at Object.eval sandbox-script.js:6:530)","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":true,"attachmentsCount":0,"stepsCount":0,"shouldDisplayMessage":true}],"attachments":[{"uid":"f029a048b1a21790","name":"PreRequest","source":"f029a048b1a21790.txt","type":"text/plain","size":119},{"uid":"f909836f8ca4f7ee","name":"Request Headers","source":"f909836f8ca4f7ee.json","type":"application/json","size":325},{"uid":"c805c9d5cfa6b7b8","name":"Response Headers","source":"c805c9d5cfa6b7b8.json","type":"application/json","size":556},{"uid":"500c6fca34e2a79d","name":"Response Body","source":"500c6fca34e2a79d.txt","type":"text/plain","size":183}],"parameters":[],"attachmentStep":false,"hasContent":true,"attachmentsCount":4,"stepsCount":6,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1167-869"},{"name":"thread","value":"pid-2071-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"histories > Fetch branch histories"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://management.libertypayng.com/api/v1/stock/histories?company=0029b0ec-2a5d-4c11-a08d-bd261ea8905a&branch=2899e20d-dc1d-4981-b66e-b572e345cdbb"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"89c2c604ed6aecb9.json","parameterValues":["GET - https://management.libertypayng.com/api/v1/stock/histories?company=0029b0ec-2a5d-4c11-a08d-bd261ea8905a&branch=2899e20d-dc1d-4981-b66e-b572e345cdbb","401"]}
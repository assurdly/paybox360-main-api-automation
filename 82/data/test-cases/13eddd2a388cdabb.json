{"uid":"13eddd2a388cdabb","name":"make request [Invalid invoice ID]","fullName":"PayBox-360 - QA AUTOMATION/Sales/return / refund/swap#make request [Invalid invoice ID]","historyId":"cd0c8f21f08fbf2f81cc330dbb837935:a21088537522a598cb97ef25a358b6c0","time":{"start":1729841473924,"stop":1729841473990,"duration":66},"status":"failed","statusMessage":"Status code is 400, Company field error message is valid","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Company field error message is valid","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1729841473987,"stop":1729841473987,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1723)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Company field error message is valid","time":{"start":1729841473988,"stop":1729841473988,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'invoice'","statusTrace":"AssertionError: expected { …(3) } to have property 'invoice'\n   at Object.eval sandbox-script.js:2:1723)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4b544db6274c4c40","name":"PreRequest","source":"4b544db6274c4c40.txt","type":"text/plain","size":119},{"uid":"ba17b1092a7f50db","name":"Request Headers","source":"ba17b1092a7f50db.json","type":"application/json","size":593},{"uid":"b5fe49a7d89504bc","name":"Request Body","source":"b5fe49a7d89504bc.txt","type":"text/plain","size":517},{"uid":"afd5e591fd122a78","name":"Response Headers","source":"afd5e591fd122a78.json","type":"application/json","size":543},{"uid":"77726d69f415eb17","name":"Response Body","source":"77726d69f415eb17.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1745-94"},{"name":"thread","value":"pid-2198-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Sales"},{"name":"subSuite","value":"return / refund > swap"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/sales/swap/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"13eddd2a388cdabb.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/sales/swap/","401"]}
{"uid":"5daf6e7252d3b245","name":"register invoice - Negative item payment amount","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/Register invoice#register invoice - Negative item payment amount","historyId":"7f50e6c330fb2c4b6794b55d942845d5:077503df46e8c19e168a406f8c64dfd5","time":{"start":1729841454638,"stop":1729841454704,"duration":66},"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1729841454700,"stop":1729841454700,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1449)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is returned","time":{"start":1729841454701,"stop":1729841454701,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'details')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'details')\n   at Object.eval sandbox-script.js:2:1449)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9907459fca16cf92","name":"PreRequest","source":"9907459fca16cf92.txt","type":"text/plain","size":119},{"uid":"b8a092198f867888","name":"Request Headers","source":"b8a092198f867888.json","type":"application/json","size":593},{"uid":"5a68738a7d24a7bd","name":"Request Body","source":"5a68738a7d24a7bd.txt","type":"text/plain","size":668},{"uid":"e3fc9f25fe06cd43","name":"Response Headers","source":"e3fc9f25fe06cd43.json","type":"application/json","size":554},{"uid":"a1cdbc4800d4ab74","name":"Response Body","source":"a1cdbc4800d4ab74.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1745-94"},{"name":"thread","value":"pid-2198-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"Register invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5daf6e7252d3b245.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/","401"]}
{"uid":"eec5c21057cd50ed","name":"add Copy - Invalid branch id","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/tax/Add Tax#add Copy - Invalid branch id","historyId":"ebf3ee2ae33893875df494641c208f7c:1550ca73f00f56dbfba572f94551d302","time":{"start":1729841453425,"stop":1729841453491,"duration":66},"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1729841453486,"stop":1729841453487,"duration":1},"status":"failed","statusMessage":"expected 401 to be one of [ 400, 422 ]","statusTrace":"AssertionError: expected 401 to be one of [ 400, 422 ]\n   at Object.eval sandbox-script.js:1:1431)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is returned","time":{"start":1729841453487,"stop":1729841453487,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:2:1431)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5db3bf14283d45a0","name":"PreRequest","source":"5db3bf14283d45a0.txt","type":"text/plain","size":119},{"uid":"723887d23f641bcf","name":"Request Headers","source":"723887d23f641bcf.json","type":"application/json","size":592},{"uid":"569141edc447d17d","name":"Request Body","source":"569141edc447d17d.txt","type":"text/plain","size":96},{"uid":"591ba71769d971dd","name":"Response Headers","source":"591ba71769d971dd.json","type":"application/json","size":554},{"uid":"6729a28e50ba7cac","name":"Response Body","source":"6729a28e50ba7cac.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1745-94"},{"name":"thread","value":"pid-2198-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"tax > Add Tax"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/taxes/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"eec5c21057cd50ed.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/taxes/","401"]}
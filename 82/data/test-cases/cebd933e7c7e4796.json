{"uid":"cebd933e7c7e4796","name":"create products [Invalid sock price]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid sock price]","historyId":"8da804ee51bde3898e4d5b6c8a865b80:3ce81e2f05f0247aa4b57365110b221d","time":{"start":1729841399306,"stop":1729841399372,"duration":66},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1729841399369,"stop":1729841399369,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:703)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1729841399369,"stop":1729841399370,"duration":1},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:703)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"aeed495f5723048","name":"PreRequest","source":"aeed495f5723048.txt","type":"text/plain","size":119},{"uid":"b2555f80e9dbd3cb","name":"Request Headers","source":"b2555f80e9dbd3cb.json","type":"application/json","size":593},{"uid":"1a90ace824582240","name":"Request Body","source":"1a90ace824582240.txt","type":"text/plain","size":874},{"uid":"9780ff609dec6ac8","name":"Response Headers","source":"9780ff609dec6ac8.json","type":"application/json","size":562},{"uid":"838e087ae3c0133e","name":"Response Body","source":"838e087ae3c0133e.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1745-94"},{"name":"thread","value":"pid-2198-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"cebd933e7c7e4796.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/stock/products/","401"]}
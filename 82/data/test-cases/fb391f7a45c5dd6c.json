{"uid":"fb391f7a45c5dd6c","name":"make request [invalid quantity: not numeric]","fullName":"PayBox-360 - QA AUTOMATION/Sales/return / refund/swap#make request [invalid quantity: not numeric]","historyId":"dd0d039b571075a4c2de06ba1ca1e36e:a21088537522a598cb97ef25a358b6c0","time":{"start":1729841474331,"stop":1729841474395,"duration":64},"status":"failed","statusMessage":"Status code is 400, Response contains old_items and new_items with quantity errors","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response contains old_items and new_items with quantity errors","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1729841474392,"stop":1729841474392,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1729)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response contains old_items and new_items with quantity errors","time":{"start":1729841474393,"stop":1729841474393,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'old_items'","statusTrace":"AssertionError: expected { …(3) } to have property 'old_items'\n   at Object.eval sandbox-script.js:2:1729)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1a9006eb07db6d34","name":"PreRequest","source":"1a9006eb07db6d34.txt","type":"text/plain","size":119},{"uid":"7658d541fd9b7498","name":"Request Headers","source":"7658d541fd9b7498.json","type":"application/json","size":593},{"uid":"af2770d074f24c64","name":"Request Body","source":"af2770d074f24c64.txt","type":"text/plain","size":525},{"uid":"5a508c0654e0cdbb","name":"Response Headers","source":"5a508c0654e0cdbb.json","type":"application/json","size":543},{"uid":"5ce9077e8a5dd4bc","name":"Response Body","source":"5ce9077e8a5dd4bc.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1745-94"},{"name":"thread","value":"pid-2198-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Sales"},{"name":"subSuite","value":"return / refund > swap"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/sales/swap/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"fb391f7a45c5dd6c.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/sales/swap/","401"]}
{"uid":"c393f9bfb1a4531","name":"make request [Invalid choice]","fullName":"PayBox-360 - QA AUTOMATION/Sales/return / refund/swap#make request [Invalid choice]","historyId":"32bd107d59da04c9988f11d255e94abe:a21088537522a598cb97ef25a358b6c0","time":{"start":1729841474060,"stop":1729841474124,"duration":64},"status":"failed","statusMessage":"Status code is 400, Company field error message is valid","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Company field error message is valid","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1729841474121,"stop":1729841474121,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1725)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Company field error message is valid","time":{"start":1729841474122,"stop":1729841474122,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'choice'","statusTrace":"AssertionError: expected { …(3) } to have property 'choice'\n   at Object.eval sandbox-script.js:2:1725)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8c5a097fad2091c9","name":"PreRequest","source":"8c5a097fad2091c9.txt","type":"text/plain","size":119},{"uid":"69a84f5da4dc1456","name":"Request Headers","source":"69a84f5da4dc1456.json","type":"application/json","size":593},{"uid":"6dec0e4b50e0fb23","name":"Request Body","source":"6dec0e4b50e0fb23.txt","type":"text/plain","size":519},{"uid":"e72803361be446e6","name":"Response Headers","source":"e72803361be446e6.json","type":"application/json","size":543},{"uid":"3c8e4cb059baf0a9","name":"Response Body","source":"3c8e4cb059baf0a9.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1745-94"},{"name":"thread","value":"pid-2198-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Sales"},{"name":"subSuite","value":"return / refund > swap"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/sales/swap/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c393f9bfb1a4531.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/sales/swap/","401"]}
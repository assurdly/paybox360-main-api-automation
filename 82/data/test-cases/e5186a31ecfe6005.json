{"uid":"e5186a31ecfe6005","name":"create products [Invalid selling price]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid selling price]","historyId":"0938a9747d7423d13e8527880a74114f:3ce81e2f05f0247aa4b57365110b221d","time":{"start":1729841399375,"stop":1729841399442,"duration":67},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1729841399437,"stop":1729841399437,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:704)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1729841399438,"stop":1729841399438,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:704)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3a7939c97021357b","name":"PreRequest","source":"3a7939c97021357b.txt","type":"text/plain","size":119},{"uid":"c7bbbc0608708460","name":"Request Headers","source":"c7bbbc0608708460.json","type":"application/json","size":593},{"uid":"20ebd5ded216c1b8","name":"Request Body","source":"20ebd5ded216c1b8.txt","type":"text/plain","size":867},{"uid":"4bbfbbe343365f70","name":"Response Headers","source":"4bbfbbe343365f70.json","type":"application/json","size":562},{"uid":"e5c6e756633642b9","name":"Response Body","source":"e5c6e756633642b9.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1745-94"},{"name":"thread","value":"pid-2198-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e5186a31ecfe6005.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/stock/products/","401"]}
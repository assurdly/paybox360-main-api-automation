{"uid":"14b3fa785f77c3de","name":"create products [Invalid category ID]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid category ID]","historyId":"2e7578de6f25a26f7f8378c6f287ff38:3ce81e2f05f0247aa4b57365110b221d","time":{"start":1729841399512,"stop":1729841399586,"duration":74},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1729841399579,"stop":1729841399579,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:706)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1729841399583,"stop":1729841399583,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:706)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3a5f2587b7590662","name":"PreRequest","source":"3a5f2587b7590662.txt","type":"text/plain","size":119},{"uid":"13138e7bf388c10","name":"Request Headers","source":"13138e7bf388c10.json","type":"application/json","size":594},{"uid":"f29662402e3816db","name":"Request Body","source":"f29662402e3816db.txt","type":"text/plain","size":1049},{"uid":"c334896efa9e5e72","name":"Response Headers","source":"c334896efa9e5e72.json","type":"application/json","size":562},{"uid":"a9238234222ef91","name":"Response Body","source":"a9238234222ef91.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1745-94"},{"name":"thread","value":"pid-2198-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"14b3fa785f77c3de.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/stock/products/","401"]}
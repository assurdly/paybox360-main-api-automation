{"uid":"47d3fd6e3c070250","name":"record payment-Invalid order ID","fullName":"PayBox-360 - QA AUTOMATION/Instant Web/Order management/Record payment#record payment-Invalid order ID","historyId":"5566a8d1cf0e5ca3893ad326c13a5b75:d1458e01325125e402177d447019981a","time":{"start":1729841419557,"stop":1729841419622,"duration":65},"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1729841419619,"stop":1729841419619,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:984)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is returned","time":{"start":1729841419619,"stop":1729841419619,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'order'","statusTrace":"AssertionError: expected { …(3) } to have property 'order'\n   at Object.eval sandbox-script.js:2:984)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"853d1b036a6d39a3","name":"PreRequest","source":"853d1b036a6d39a3.txt","type":"text/plain","size":119},{"uid":"d3a6c24901756c1d","name":"Request Headers","source":"d3a6c24901756c1d.json","type":"application/json","size":593},{"uid":"41013e59547e1293","name":"Request Body","source":"41013e59547e1293.txt","type":"text/plain","size":153},{"uid":"e3495c30e2fd7dc1","name":"Response Headers","source":"e3495c30e2fd7dc1.json","type":"application/json","size":543},{"uid":"b7cf55ca3edaa5ec","name":"Response Body","source":"b7cf55ca3edaa5ec.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1745-94"},{"name":"thread","value":"pid-2198-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Instant Web"},{"name":"subSuite","value":"Order management > Record payment"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/orders/payment-record/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"47d3fd6e3c070250.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/orders/payment-record/","401"]}
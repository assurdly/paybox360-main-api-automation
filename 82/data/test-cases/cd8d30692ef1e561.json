{"uid":"cd8d30692ef1e561","name":"register sales-Invalid branch ID","fullName":"PayBox-360 - QA AUTOMATION/Point of sales/Register Sales#register sales-Invalid branch ID","historyId":"3f420eeae6b3c0981e48512086a327dd:d63b74a03bd55893daf72c1b9cfbc6bd","time":{"start":1729841441905,"stop":1729841441969,"duration":64},"status":"failed","statusMessage":"Status code is 400, branch ID is invalid is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, branch ID is invalid is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1729841441965,"stop":1729841441965,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1270)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"branch ID is invalid is returned","time":{"start":1729841441965,"stop":1729841441966,"duration":1},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:2:1270)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"eb67dfd43718b079","name":"PreRequest","source":"eb67dfd43718b079.txt","type":"text/plain","size":119},{"uid":"7f8cfc0d55565cb","name":"Request Headers","source":"7f8cfc0d55565cb.json","type":"application/json","size":593},{"uid":"d0b170ceaec1ace5","name":"Request Body","source":"d0b170ceaec1ace5.txt","type":"text/plain","size":525},{"uid":"a80da21c852342a","name":"Response Headers","source":"a80da21c852342a.json","type":"application/json","size":559},{"uid":"15c7cdf49d259c4d","name":"Response Body","source":"15c7cdf49d259c4d.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1745-94"},{"name":"thread","value":"pid-2198-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Point of sales"},{"name":"subSuite","value":"Register Sales"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/sales/register/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"cd8d30692ef1e561.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/sales/register/","401"]}
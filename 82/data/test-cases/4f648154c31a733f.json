{"uid":"4f648154c31a733f","name":"existing customer payment link-Invalid company ID","fullName":"PayBox-360 - QA AUTOMATION/Sales/branches/Point of sales/Existing Customer Payment Link#existing customer payment link-Invalid company ID","historyId":"116e35a86ce7f727f61284bcb466b408:392a8918a688b86a9acd65bb0ce145da","time":{"start":1729841462169,"stop":1729841462235,"duration":66},"status":"failed","statusMessage":"Status code is 400, Sales record returns the required data","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Sales record returns the required data","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1729841462231,"stop":1729841462231,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1555)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Sales record returns the required data","time":{"start":1729841462232,"stop":1729841462232,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'company'","statusTrace":"AssertionError: expected { …(3) } to have property 'company'\n   at Object.eval sandbox-script.js:2:1555)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b4565d19f5ea65ac","name":"PreRequest","source":"b4565d19f5ea65ac.txt","type":"text/plain","size":119},{"uid":"9f9e193fb49f4618","name":"Request Headers","source":"9f9e193fb49f4618.json","type":"application/json","size":593},{"uid":"d8d47c28d308d6db","name":"Request Body","source":"d8d47c28d308d6db.txt","type":"text/plain","size":128},{"uid":"96625097644120da","name":"Response Headers","source":"96625097644120da.json","type":"application/json","size":543},{"uid":"cdf780b3a87b8dda","name":"Response Body","source":"cdf780b3a87b8dda.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1745-94"},{"name":"thread","value":"pid-2198-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Sales"},{"name":"subSuite","value":"branches > Point of sales > Existing Customer Payment Link"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/sales/payment_link/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"4f648154c31a733f.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/sales/payment_link/","401"]}
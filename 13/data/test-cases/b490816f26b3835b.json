{"uid":"b490816f26b3835b","name":"fetch inventory status","fullName":"stock/inventory/status/Fetch inventory status#fetch inventory status","historyId":"5ab53782df1fa0103524f3207ad18300:34158cdde439b032ee0426bd24b78b22","time":{"start":1722801911138,"stop":1722801911240,"duration":102},"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Inventory status array exists and is not empty, First inventory status item structure is correct, Count and total_inventory_status are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Inventory status array exists and is not empty, First inventory status item structure is correct, Count and total_inventory_status are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 200","time":{"start":1722801911234,"stop":1722801911234,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:509)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1722801911235,"stop":1722801911235,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:509)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status_code is 200","time":{"start":1722801911236,"stop":1722801911236,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 200","statusTrace":"AssertionError: expected undefined to deeply equal 200\n   at Object.eval sandbox-script.js:3:509)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response data contains message","time":{"start":1722801911236,"stop":1722801911236,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:4:509)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Inventory status array exists and is not empty","time":{"start":1722801911237,"stop":1722801911237,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:5:509)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"First inventory status item structure is correct","time":{"start":1722801911237,"stop":1722801911237,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'inventory_status')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'inventory_status')\n   at Object.eval sandbox-script.js:6:509)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Count and total_inventory_status are correct","time":{"start":1722801911238,"stop":1722801911238,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:7:509)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7ea2d41533ab4592","name":"PreRequest","source":"7ea2d41533ab4592.txt","type":"text/plain","size":119},{"uid":"d9eacb2c53d6dc25","name":"Request Headers","source":"d9eacb2c53d6dc25.json","type":"application/json","size":325},{"uid":"58a6a32db09fe6bd","name":"Response Headers","source":"58a6a32db09fe6bd.json","type":"application/json","size":556},{"uid":"ab298c8ebcbf79c1","name":"Response Body","source":"ab298c8ebcbf79c1.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"stock"},{"name":"suite","value":"inventory"},{"name":"subSuite","value":"status > Fetch inventory status"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://management.libertypayng.com/api/v1/stock/inventory_status?company=138d17a7-c135-43a2-bcc3-93e373309164&branch=null&date=2024-05-18"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b490816f26b3835b.json","parameterValues":["GET - https://management.libertypayng.com/api/v1/stock/inventory_status?company=138d17a7-c135-43a2-bcc3-93e373309164&branch=null&date=2024-05-18","401"]}
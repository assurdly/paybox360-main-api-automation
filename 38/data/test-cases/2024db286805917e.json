{"uid":"2024db286805917e","name":"register invoice - Invalid quantity value","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/Register invoice#register invoice - Invalid quantity value","historyId":"b59eee937ff9157c0f8760c4523f63c8:dab804bc212aa627a9b9242cecfeea31","time":{"start":1725138160938,"stop":1725138161050,"duration":112},"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 201, status: Created","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 201, status: Created","steps":[{"name":"Status code is 400","time":{"start":1725138161047,"stop":1725138161047,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 201","statusTrace":"AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:1324)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Success message returned","time":{"start":1725138161048,"stop":1725138161048,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '1')","statusTrace":"TypeError: Cannot read properties of undefined (reading '1')\n   at Object.eval sandbox-script.js:2:1324)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b90e0f66ab0e0cab","name":"PreRequest","source":"b90e0f66ab0e0cab.txt","type":"text/plain","size":119},{"uid":"900d42667abcf1df","name":"Request Headers","source":"900d42667abcf1df.json","type":"application/json","size":649},{"uid":"66cf30ebfe3c2163","name":"Request Body","source":"66cf30ebfe3c2163.txt","type":"text/plain","size":620},{"uid":"880515defb4fc77d","name":"Response Headers","source":"880515defb4fc77d.json","type":"application/json","size":425},{"uid":"b6a52f733f39210a","name":"Response Body","source":"b6a52f733f39210a.txt","type":"text/plain","size":322}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az674-950"},{"name":"thread","value":"pid-2046-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"Register invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/invoicing/invoices/"},{"name":"Response Code","value":"201"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"f170ee727c07b599","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/37//#testresult/f170ee727c07b599","status":"failed","statusDetails":"Status code is 400, Response contains status and message properties, Your test name","time":{"start":1725041350635,"stop":1725041350779,"duration":144}},{"uid":"89db96f4f28fd68c","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/36//#testresult/89db96f4f28fd68c","status":"failed","statusDetails":"Status code is 400, Response contains status and message properties, Your test name","time":{"start":1724914305592,"stop":1724914305732,"duration":140}}]},"tags":[]},"source":"2024db286805917e.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/invoicing/invoices/","201"]}
{"uid":"d46b6a8b6923cbd1","name":"register invoice - Negative payment amount","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/Register invoice#register invoice - Negative payment amount","historyId":"a110ecb8cab469581da685ad2fb92561:dab804bc212aa627a9b9242cecfeea31","time":{"start":1725138161255,"stop":1725138161377,"duration":122},"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 201, status: Created","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Error message is returned","statusTrace":"Response code: 201, status: Created","steps":[{"name":"Status code is 400","time":{"start":1725138161374,"stop":1725138161374,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 201","statusTrace":"AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:1327)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is returned","time":{"start":1725138161375,"stop":1725138161375,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'details')","statusTrace":"TypeError: Cannot read properties of null (reading 'details')\n   at Object.eval sandbox-script.js:2:1327)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9d1fa45034f76198","name":"PreRequest","source":"9d1fa45034f76198.txt","type":"text/plain","size":119},{"uid":"6f644ef6bdc9a40","name":"Request Headers","source":"6f644ef6bdc9a40.json","type":"application/json","size":649},{"uid":"5c072e3612534904","name":"Request Body","source":"5c072e3612534904.txt","type":"text/plain","size":784},{"uid":"d65e12c1339e89ce","name":"Response Headers","source":"d65e12c1339e89ce.json","type":"application/json","size":425},{"uid":"53efb902d19b7f28","name":"Response Body","source":"53efb902d19b7f28.txt","type":"text/plain","size":321}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az674-950"},{"name":"thread","value":"pid-2046-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"Register invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/invoicing/invoices/"},{"name":"Response Code","value":"201"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"cad573dfe53cd83b","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/37//#testresult/cad573dfe53cd83b","status":"failed","statusDetails":"Status code is 400, Response contains status and message properties, Error message is returned","time":{"start":1725041351035,"stop":1725041351179,"duration":144}},{"uid":"5a4b08479368ae5a","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/36//#testresult/5a4b08479368ae5a","status":"failed","statusDetails":"Status code is 400, Response contains status and message properties, Error message is returned","time":{"start":1724914305986,"stop":1724914306124,"duration":138}}]},"tags":[]},"source":"d46b6a8b6923cbd1.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/invoicing/invoices/","201"]}
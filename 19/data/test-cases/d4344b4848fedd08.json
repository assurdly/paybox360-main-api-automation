{"uid":"d4344b4848fedd08","name":"create products [Invalid selling price]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid selling price]","historyId":"0938a9747d7423d13e8527880a74114f:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723415652199,"stop":1723415652291,"duration":92},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723415652288,"stop":1723415652288,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:558)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723415652289,"stop":1723415652289,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:558)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"919b6169ee2d19a","name":"PreRequest","source":"919b6169ee2d19a.txt","type":"text/plain","size":119},{"uid":"edcaf5803b42d7d3","name":"Request Headers","source":"edcaf5803b42d7d3.json","type":"application/json","size":394},{"uid":"9e90f92c57dbdbb4","name":"Request Body","source":"9e90f92c57dbdbb4.txt","type":"text/plain","size":934},{"uid":"6d06c056b75ce156","name":"Response Headers","source":"6d06c056b75ce156.json","type":"application/json","size":570},{"uid":"ee16aa24b0bc6009","name":"Response Body","source":"ee16aa24b0bc6009.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"356551dc736b0e45","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/18//#testresult/356551dc736b0e45","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723406684394,"stop":1723406684432,"duration":38}},{"uid":"9a4362afb47d5f78","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/17//#testresult/9a4362afb47d5f78","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723328064307,"stop":1723328064408,"duration":101}}]},"tags":[]},"source":"d4344b4848fedd08.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
{"uid":"a724441f9fc364b0","name":"create price list [Success]","fullName":"PayBox-360 - QA AUTOMATION/Stock/price list/Create price list#create price list [Success]","historyId":"29ca542b250b89c2c07aceb231b8d728:492493917734de00c61b8c5ff72dab12","time":{"start":1723725789477,"stop":1723725789576,"duration":99},"status":"failed","statusMessage":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 201","time":{"start":1723725789572,"stop":1723725789572,"duration":0},"status":"failed","statusMessage":"expected response to have status code 201 but got 401","statusTrace":"AssertionError: expected response to have status code 201 but got 401\n   at Object.eval sandbox-script.js:1:572)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1723725789572,"stop":1723725789572,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:572)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status_code is 201","time":{"start":1723725789573,"stop":1723725789573,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 201","statusTrace":"AssertionError: expected undefined to deeply equal 201\n   at Object.eval sandbox-script.js:3:572)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response message is correct","time":{"start":1723725789573,"stop":1723725789573,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'message')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'message')\n   at Object.eval sandbox-script.js:4:572)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Price lists array exists and is not empty","time":{"start":1723725789574,"stop":1723725789574,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:5:572)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"First price list item structure is correct","time":{"start":1723725789574,"stop":1723725789574,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'price_lists')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'price_lists')\n   at Object.eval sandbox-script.js:6:572)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9e6f6fd07fbb5207","name":"PreRequest","source":"9e6f6fd07fbb5207.txt","type":"text/plain","size":119},{"uid":"f9ca95baca5075af","name":"Request Headers","source":"f9ca95baca5075af.json","type":"application/json","size":394},{"uid":"f8e7b8c6e7b91d19","name":"Request Body","source":"f8e7b8c6e7b91d19.txt","type":"text/plain","size":563},{"uid":"f881f2c7aa7b1dc4","name":"Response Headers","source":"f881f2c7aa7b1dc4.json","type":"application/json","size":569},{"uid":"fc319f5ff2640a08","name":"Response Body","source":"fc319f5ff2640a08.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"price list > Create price list"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/price_list/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"7348e9f75aacd7d9","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/21//#testresult/7348e9f75aacd7d9","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1723660699646,"stop":1723660699728,"duration":82}},{"uid":"ee1f73d49a5aaf0f","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/20//#testresult/ee1f73d49a5aaf0f","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1723638571495,"stop":1723638571599,"duration":104}},{"uid":"f812ab7c02d5cd66","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/19//#testresult/f812ab7c02d5cd66","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1723415649289,"stop":1723415649385,"duration":96}},{"uid":"85924eb147f71769","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/18//#testresult/85924eb147f71769","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1723406683440,"stop":1723406683471,"duration":31}},{"uid":"4ed73eff3c02cfa","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/17//#testresult/4ed73eff3c02cfa","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1723328061222,"stop":1723328061324,"duration":102}}]},"tags":[]},"source":"a724441f9fc364b0.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/price_list/","401"]}
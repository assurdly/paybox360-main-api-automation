{"uid":"211ead8529e02c83","name":"create products [Invalid quantity]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid quantity]","historyId":"5d3d54e62f975a9e01b10623192a1968:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723328064106,"stop":1723328064203,"duration":97},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723328064201,"stop":1723328064201,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:556)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723328064201,"stop":1723328064201,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:556)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e7f91db89a39f6d8","name":"PreRequest","source":"e7f91db89a39f6d8.txt","type":"text/plain","size":119},{"uid":"9bf77d2de38731f1","name":"Request Headers","source":"9bf77d2de38731f1.json","type":"application/json","size":394},{"uid":"5c2740009d3edf97","name":"Request Body","source":"5c2740009d3edf97.txt","type":"text/plain","size":945},{"uid":"6f03f41a0be70cbc","name":"Response Headers","source":"6f03f41a0be70cbc.json","type":"application/json","size":570},{"uid":"b1253cdddea0e488","name":"Response Body","source":"b1253cdddea0e488.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"211ead8529e02c83.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
{"uid":"13778a0828e6a3ff","name":"create products [Invalid Company ID]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid Company ID]","historyId":"e76eedd7f70ba1c7086c2f955d1ced93:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723328064411,"stop":1723328064510,"duration":99},"status":"failed","statusMessage":"Status code is 400, Validate error message for company UUID format","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Validate error message for company UUID format","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723328064506,"stop":1723328064506,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:559)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validate error message for company UUID format","time":{"start":1723328064507,"stop":1723328064507,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'company'","statusTrace":"AssertionError: expected { …(3) } to have property 'company'\n   at Object.eval sandbox-script.js:2:559)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8929e4738436a590","name":"PreRequest","source":"8929e4738436a590.txt","type":"text/plain","size":119},{"uid":"7893c490e19899b","name":"Request Headers","source":"7893c490e19899b.json","type":"application/json","size":395},{"uid":"a579ce228df862ec","name":"Request Body","source":"a579ce228df862ec.txt","type":"text/plain","size":1120},{"uid":"5da90c60796cfddc","name":"Response Headers","source":"5da90c60796cfddc.json","type":"application/json","size":570},{"uid":"23bba212bc7a5948","name":"Response Body","source":"23bba212bc7a5948.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"13778a0828e6a3ff.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
{"uid":"1f35c79da93954c2","name":"create products [Invalid sock price]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid sock price]","historyId":"8da804ee51bde3898e4d5b6c8a865b80:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723638574670,"stop":1723638574770,"duration":100},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723638574767,"stop":1723638574767,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:575)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723638574768,"stop":1723638574768,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:575)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f6df5e351a451911","name":"PreRequest","source":"f6df5e351a451911.txt","type":"text/plain","size":119},{"uid":"21233d17b8e12ba0","name":"Request Headers","source":"21233d17b8e12ba0.json","type":"application/json","size":394},{"uid":"cf5ae4f0c7d5e7d5","name":"Request Body","source":"cf5ae4f0c7d5e7d5.txt","type":"text/plain","size":874},{"uid":"220adc1c00bdaf0","name":"Response Headers","source":"220adc1c00bdaf0.json","type":"application/json","size":570},{"uid":"d45e6e1e6f291635","name":"Response Body","source":"d45e6e1e6f291635.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"e590950d729c4e89","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/19//#testresult/e590950d729c4e89","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723415652102,"stop":1723415652196,"duration":94}},{"uid":"2c30b66ede91b42d","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/18//#testresult/2c30b66ede91b42d","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723406684365,"stop":1723406684391,"duration":26}},{"uid":"9f02894abad126b7","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/17//#testresult/9f02894abad126b7","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723328064206,"stop":1723328064304,"duration":98}}]},"tags":[]},"source":"1f35c79da93954c2.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
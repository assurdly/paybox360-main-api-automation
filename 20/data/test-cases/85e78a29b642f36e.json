{"uid":"85e78a29b642f36e","name":"create products [Invalid category ID]","fullName":"PayBox-360 - QA AUTOMATION/Stock/products/Create products#create products [Invalid category ID]","historyId":"2e7578de6f25a26f7f8378c6f287ff38:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723638574984,"stop":1723638575271,"duration":287},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723638575269,"stop":1723638575269,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:578)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723638575269,"stop":1723638575269,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:578)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9da1ac793907ac6e","name":"PreRequest","source":"9da1ac793907ac6e.txt","type":"text/plain","size":119},{"uid":"25cd201876b351a1","name":"Request Headers","source":"25cd201876b351a1.json","type":"application/json","size":395},{"uid":"d134035e20457a15","name":"Request Body","source":"d134035e20457a15.txt","type":"text/plain","size":1045},{"uid":"f21f102d2d772e26","name":"Response Headers","source":"f21f102d2d772e26.json","type":"application/json","size":570},{"uid":"733a893d2d7aacd4","name":"Response Body","source":"733a893d2d7aacd4.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"e9c82025a47921df","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/19//#testresult/e9c82025a47921df","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723415652389,"stop":1723415652483,"duration":94}},{"uid":"cec6851747d6d599","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/18//#testresult/cec6851747d6d599","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723406684503,"stop":1723406684529,"duration":26}},{"uid":"20a88c1cbb02c97","reportUrl":"https://assurdly.github.io/Paybox360_Main_API_Automation/17//#testresult/20a88c1cbb02c97","status":"failed","statusDetails":"Status code is 400, Products field error messages are correct","time":{"start":1723328064511,"stop":1723328064612,"duration":101}}]},"tags":[]},"source":"85e78a29b642f36e.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
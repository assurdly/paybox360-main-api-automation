{"uid":"b271e88541d11a35","name":"fetch branch histories [Success]","fullName":"PayBox-360 - QA AUTOMATION/Stock/histories/Fetch branch histories#fetch branch histories [Success]","historyId":"db512930f3bb40f4d6a0955e70f24e47:ae44698ff705df44b47e5cb2bfa0ea6f","time":{"start":1740512936679,"stop":1740512936707,"duration":28},"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Stock histories array exists and is not empty, First stock history item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Response status is success, Response status_code is 200, Response data contains message, Stock histories array exists and is not empty, First stock history item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 200","time":{"start":1740512936703,"stop":1740512936703,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:715)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Response status is success","time":{"start":1740512936704,"stop":1740512936704,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:715)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Response status_code is 200","time":{"start":1740512936704,"stop":1740512936704,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 200","statusTrace":"AssertionError: expected undefined to deeply equal 200\n   at Object.eval sandbox-script.js:3:715)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Response data contains message","time":{"start":1740512936705,"stop":1740512936705,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:4:715)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"Stock histories array exists and is not empty","time":{"start":1740512936705,"stop":1740512936705,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:5:715)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"First stock history item structure is correct","time":{"start":1740512936705,"stop":1740512936706,"duration":1},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'stock_histories')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'stock_histories')\n   at Object.eval sandbox-script.js:6:715)","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[{"uid":"860be90ba94755e4","name":"PreRequest","source":"860be90ba94755e4.txt","type":"text/plain","size":119},{"uid":"d1f55ddda0ad2dbe","name":"Request Headers","source":"d1f55ddda0ad2dbe.json","type":"application/json","size":325},{"uid":"e5a202225469a27a","name":"Response Headers","source":"e5a202225469a27a.json","type":"application/json","size":556},{"uid":"51cae0edaf5b148b","name":"Response Body","source":"51cae0edaf5b148b.txt","type":"text/plain","size":183}],"parameters":[],"stepsCount":6,"attachmentsCount":4,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1922-648"},{"name":"thread","value":"pid-2384-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"histories > Fetch branch histories"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://management.libertypayng.com/api/v1/stock/histories?company=7a105ab4-18f5-4744-9df9-13cff8e40acf&branch=65557f0c-3599-44bb-a672-5d11e17b5f8b"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b271e88541d11a35.json","parameterValues":["GET - https://management.libertypayng.com/api/v1/stock/histories?company=7a105ab4-18f5-4744-9df9-13cff8e40acf&branch=65557f0c-3599-44bb-a672-5d11e17b5f8b","401"]}
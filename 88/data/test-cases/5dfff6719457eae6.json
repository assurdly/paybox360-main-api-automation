{"uid":"5dfff6719457eae6","name":"register invoice - empty item description","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/Register invoice#register invoice - empty item description","historyId":"bb0c9a6aaa70ae8e7285611991200d26:077503df46e8c19e168a406f8c64dfd5","time":{"start":1730311510139,"stop":1730311510165,"duration":26},"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730311510163,"stop":1730311510163,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1442)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Success message returned","time":{"start":1730311510163,"stop":1730311510163,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:2:1442)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"256f74f3060df4c","name":"PreRequest","source":"256f74f3060df4c.txt","type":"text/plain","size":119},{"uid":"518e03cb7e24ecd","name":"Request Headers","source":"518e03cb7e24ecd.json","type":"application/json","size":593},{"uid":"954fc54b757d7cfa","name":"Request Body","source":"954fc54b757d7cfa.txt","type":"text/plain","size":697},{"uid":"98c47fb66684fec5","name":"Response Headers","source":"98c47fb66684fec5.json","type":"application/json","size":554},{"uid":"d3d8469fe9e0871d","name":"Response Body","source":"d3d8469fe9e0871d.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1815-572"},{"name":"thread","value":"pid-2021-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"Register invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"a800546d9485495e","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/87//#testresult/a800546d9485495e","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1730216788735,"stop":1730216788776,"duration":41}},{"uid":"af5e5b420d9b641e","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/af5e5b420d9b641e","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1729841454168,"stop":1729841454232,"duration":64}}]},"tags":[]},"source":"5dfff6719457eae6.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/","401"]}
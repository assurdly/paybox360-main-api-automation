{"uid":"64f292707988057b","name":"existing customer payment link-Invalid company ID","fullName":"PayBox-360 - QA AUTOMATION/Sales/branches/Point of sales/Existing Customer Payment Link#existing customer payment link-Invalid company ID","historyId":"116e35a86ce7f727f61284bcb466b408:392a8918a688b86a9acd65bb0ce145da","time":{"start":1730311513730,"stop":1730311513759,"duration":29},"status":"failed","statusMessage":"Status code is 400, Sales record returns the required data","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Sales record returns the required data","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730311513754,"stop":1730311513754,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1555)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Sales record returns the required data","time":{"start":1730311513755,"stop":1730311513755,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'company'","statusTrace":"AssertionError: expected { …(3) } to have property 'company'\n   at Object.eval sandbox-script.js:2:1555)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"845ae578c75f8af3","name":"PreRequest","source":"845ae578c75f8af3.txt","type":"text/plain","size":119},{"uid":"709c2c6b794b6a3d","name":"Request Headers","source":"709c2c6b794b6a3d.json","type":"application/json","size":593},{"uid":"bc0ba5d879a69d91","name":"Request Body","source":"bc0ba5d879a69d91.txt","type":"text/plain","size":128},{"uid":"532d121aefcf8c9","name":"Response Headers","source":"532d121aefcf8c9.json","type":"application/json","size":543},{"uid":"2b3fed07fdf32ec5","name":"Response Body","source":"2b3fed07fdf32ec5.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1815-572"},{"name":"thread","value":"pid-2021-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Sales"},{"name":"subSuite","value":"branches > Point of sales > Existing Customer Payment Link"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/sales/payment_link/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"a30d0e92652bd20b","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/87//#testresult/a30d0e92652bd20b","status":"failed","statusDetails":"Status code is 400, Sales record returns the required data","time":{"start":1730216794142,"stop":1730216794188,"duration":46}},{"uid":"4f648154c31a733f","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/4f648154c31a733f","status":"failed","statusDetails":"Status code is 400, Sales record returns the required data","time":{"start":1729841462169,"stop":1729841462235,"duration":66}}]},"tags":[]},"source":"64f292707988057b.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/sales/payment_link/","401"]}
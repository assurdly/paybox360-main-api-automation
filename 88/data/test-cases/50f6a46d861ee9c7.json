{"uid":"50f6a46d861ee9c7","name":"register invoice - optional fields","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/Register invoice#register invoice - optional fields","historyId":"5c962c98a7271fdb1bd73b20b123a00b:077503df46e8c19e168a406f8c64dfd5","time":{"start":1730311510104,"stop":1730311510136,"duration":32},"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Success message returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730311510132,"stop":1730311510132,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1441)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Success message returned","time":{"start":1730311510132,"stop":1730311510132,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:2:1441)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5b88122b5da88b7e","name":"PreRequest","source":"5b88122b5da88b7e.txt","type":"text/plain","size":119},{"uid":"54a860ad9789da5f","name":"Request Headers","source":"54a860ad9789da5f.json","type":"application/json","size":593},{"uid":"92cca9ffb3001b3","name":"Request Body","source":"92cca9ffb3001b3.txt","type":"text/plain","size":515},{"uid":"7985cad6f846e6e6","name":"Response Headers","source":"7985cad6f846e6e6.json","type":"application/json","size":554},{"uid":"50622924c46c5cdc","name":"Response Body","source":"50622924c46c5cdc.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1815-572"},{"name":"thread","value":"pid-2021-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"Register invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"c9f2aefafb3e64dc","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/87//#testresult/c9f2aefafb3e64dc","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1730216788689,"stop":1730216788732,"duration":43}},{"uid":"e1c7d18ccda16505","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/e1c7d18ccda16505","status":"failed","statusDetails":"Status code is 400, Success message returned","time":{"start":1729841454101,"stop":1729841454166,"duration":65}}]},"tags":[]},"source":"50f6a46d861ee9c7.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/","401"]}
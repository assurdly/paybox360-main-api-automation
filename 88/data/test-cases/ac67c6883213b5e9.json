{"uid":"ac67c6883213b5e9","name":"existing customer payment link-Invalid batch ID Copy","fullName":"PayBox-360 - QA AUTOMATION/Point of sales/Existing Customer Payment Link#existing customer payment link-Invalid batch ID Copy","historyId":"18a3d8009f1db00abe2a03ae6dbb55d5:392a8918a688b86a9acd65bb0ce145da","time":{"start":1730311507474,"stop":1730311507507,"duration":33},"status":"failed","statusMessage":"Status code is 400, Sales record returns the required data","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Sales record returns the required data","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1730311507504,"stop":1730311507504,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:1362)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Sales record returns the required data","time":{"start":1730311507505,"stop":1730311507505,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'message'","statusTrace":"AssertionError: expected { …(3) } to have property 'message'\n   at Object.eval sandbox-script.js:2:1362)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ff6685c23ec6c15b","name":"PreRequest","source":"ff6685c23ec6c15b.txt","type":"text/plain","size":119},{"uid":"b5658d6fe6ade857","name":"Request Headers","source":"b5658d6fe6ade857.json","type":"application/json","size":593},{"uid":"4253e7ef2b605f70","name":"Request Body","source":"4253e7ef2b605f70.txt","type":"text/plain","size":128},{"uid":"b6ecb463d786df55","name":"Response Headers","source":"b6ecb463d786df55.json","type":"application/json","size":543},{"uid":"ee86376aa3f871e6","name":"Response Body","source":"ee86376aa3f871e6.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1815-572"},{"name":"thread","value":"pid-2021-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Point of sales"},{"name":"subSuite","value":"Existing Customer Payment Link"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/sales/payment_link/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"3f95bff1af57004e","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/87//#testresult/3f95bff1af57004e","status":"failed","statusDetails":"Status code is 400, Sales record returns the required data","time":{"start":1730216784835,"stop":1730216784880,"duration":45}},{"uid":"1a890119db36424d","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/1a890119db36424d","status":"failed","statusDetails":"Status code is 400, Sales record returns the required data","time":{"start":1729841448463,"stop":1729841448525,"duration":62}}]},"tags":[]},"source":"ac67c6883213b5e9.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/sales/payment_link/","401"]}
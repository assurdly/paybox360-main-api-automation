{"uid":"78adb43a1e505d75","name":"create products [Invalid selling price]","fullName":"PayBox-360 - QA AUTOMATION/stock/products/Create products#create products [Invalid selling price]","historyId":"ba9339097a4809bfbac4e77c0023ba26:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723055896337,"stop":1723055896417,"duration":80},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723055896414,"stop":1723055896414,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:558)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723055896415,"stop":1723055896415,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:558)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"df91a3de471e7280","name":"PreRequest","source":"df91a3de471e7280.txt","type":"text/plain","size":119},{"uid":"8bd07c69fdd1e580","name":"Request Headers","source":"8bd07c69fdd1e580.json","type":"application/json","size":394},{"uid":"ad7910c5f996641f","name":"Request Body","source":"ad7910c5f996641f.txt","type":"text/plain","size":940},{"uid":"e5981d9691196de8","name":"Response Headers","source":"e5981d9691196de8.json","type":"application/json","size":570},{"uid":"ef28e609382a0d6a","name":"Response Body","source":"ef28e609382a0d6a.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"78adb43a1e505d75.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
{"uid":"9431e8284a2188ee","name":"create products [Invalid category ID]","fullName":"PayBox-360 - QA AUTOMATION/stock/products/Create products#create products [Invalid category ID]","historyId":"5900b307c391699805ed69c990db8186:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723055896510,"stop":1723055896588,"duration":78},"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Products field error messages are correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723055896585,"stop":1723055896585,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:560)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Products field error messages are correct","time":{"start":1723055896586,"stop":1723055896586,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'products'","statusTrace":"AssertionError: expected { …(3) } to have property 'products'\n   at Object.eval sandbox-script.js:2:560)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"14a6a4d9d9e50d7","name":"PreRequest","source":"14a6a4d9d9e50d7.txt","type":"text/plain","size":119},{"uid":"b888a15df220efe","name":"Request Headers","source":"b888a15df220efe.json","type":"application/json","size":395},{"uid":"b95361e8174d23b1","name":"Request Body","source":"b95361e8174d23b1.txt","type":"text/plain","size":1117},{"uid":"445d18d13af8781d","name":"Response Headers","source":"445d18d13af8781d.json","type":"application/json","size":570},{"uid":"e63c08ab596804cd","name":"Response Body","source":"e63c08ab596804cd.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9431e8284a2188ee.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
{"uid":"bb322361e263dcb5","name":"create products [Invalid Company ID]","fullName":"PayBox-360 - QA AUTOMATION/stock/products/Create products#create products [Invalid Company ID]","historyId":"e2155102536a0d721de679b118fce845:0ca68ead115b4ac31749374cf51cacab","time":{"start":1723055896419,"stop":1723055896507,"duration":88},"status":"failed","statusMessage":"Status code is 400, Validate error message for company UUID format","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Validate error message for company UUID format","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1723055896503,"stop":1723055896503,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:559)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validate error message for company UUID format","time":{"start":1723055896504,"stop":1723055896504,"duration":0},"status":"failed","statusMessage":"expected { …(3) } to have property 'company'","statusTrace":"AssertionError: expected { …(3) } to have property 'company'\n   at Object.eval sandbox-script.js:2:559)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"16243bcb3c6b7647","name":"PreRequest","source":"16243bcb3c6b7647.txt","type":"text/plain","size":119},{"uid":"58c83b33e3dbca4a","name":"Request Headers","source":"58c83b33e3dbca4a.json","type":"application/json","size":395},{"uid":"6502378d9f6b13dc","name":"Request Body","source":"6502378d9f6b13dc.txt","type":"text/plain","size":1121},{"uid":"dad88c8bf67ef932","name":"Response Headers","source":"dad88c8bf67ef932.json","type":"application/json","size":570},{"uid":"1f454176a519a3a9","name":"Response Body","source":"1f454176a519a3a9.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"stock"},{"name":"subSuite","value":"products > Create products"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://management.libertypayng.com/api/v1/stock/products/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"bb322361e263dcb5.json","parameterValues":["POST - https://management.libertypayng.com/api/v1/stock/products/","401"]}
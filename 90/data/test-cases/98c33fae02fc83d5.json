{"uid":"98c33fae02fc83d5","name":"create price list [Success]","fullName":"PayBox-360 - QA AUTOMATION/Stock/price list/Create price list#create price list [Success]","historyId":"29ca542b250b89c2c07aceb231b8d728:1f4b2abbc0713271716ccac7d5bbf0db","time":{"start":1730664140348,"stop":1730664140422,"duration":74},"status":"failed","statusMessage":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 201","time":{"start":1730664140413,"stop":1730664140413,"duration":0},"status":"failed","statusMessage":"expected response to have status code 201 but got 401","statusTrace":"AssertionError: expected response to have status code 201 but got 401\n   at Object.eval sandbox-script.js:1:674)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is success","time":{"start":1730664140414,"stop":1730664140414,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:674)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status_code is 201","time":{"start":1730664140415,"stop":1730664140415,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 201","statusTrace":"AssertionError: expected undefined to deeply equal 201\n   at Object.eval sandbox-script.js:3:674)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response message is correct","time":{"start":1730664140415,"stop":1730664140415,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'message')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'message')\n   at Object.eval sandbox-script.js:4:674)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Price lists array exists and is not empty","time":{"start":1730664140416,"stop":1730664140416,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:5:674)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"First price list item structure is correct","time":{"start":1730664140416,"stop":1730664140416,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'price_lists')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'price_lists')\n   at Object.eval sandbox-script.js:6:674)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f589a0e63dc9dde0","name":"PreRequest","source":"f589a0e63dc9dde0.txt","type":"text/plain","size":119},{"uid":"e3216f6dbfc36f6f","name":"Request Headers","source":"e3216f6dbfc36f6f.json","type":"application/json","size":593},{"uid":"560710dd39b9eee3","name":"Request Body","source":"560710dd39b9eee3.txt","type":"text/plain","size":419},{"uid":"1a9ba52d699339a1","name":"Response Headers","source":"1a9ba52d699339a1.json","type":"application/json","size":561},{"uid":"6b6a40fe397d6431","name":"Response Body","source":"6b6a40fe397d6431.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az720-793"},{"name":"thread","value":"pid-2144-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Stock"},{"name":"subSuite","value":"price list > Create price list"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://requisitiondev.libertypayng.com/api/v1/stock/price_list/"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"73d9b017713c954d","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/89//#testresult/73d9b017713c954d","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1730484371540,"stop":1730484371641,"duration":101}},{"uid":"61faf704926d97ea","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/88//#testresult/61faf704926d97ea","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1730311482173,"stop":1730311482208,"duration":35}},{"uid":"1a0b09fb4ddfa4eb","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/87//#testresult/1a0b09fb4ddfa4eb","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1730216748264,"stop":1730216748313,"duration":49}},{"uid":"106ab032624cfa1d","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/106ab032624cfa1d","status":"failed","statusDetails":"Status code is 201, Response status is success, Response status_code is 201, Response message is correct, Price lists array exists and is not empty, First price list item structure is correct","time":{"start":1729841397185,"stop":1729841397254,"duration":69}}]},"tags":[]},"source":"98c33fae02fc83d5.json","parameterValues":["POST - https://requisitiondev.libertypayng.com/api/v1/stock/price_list/","401"]}
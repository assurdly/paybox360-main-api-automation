{"uid":"924a32025b5ac347","name":"due invoices","fullName":"PayBox-360 - QA AUTOMATION/Invoicing/company/Due Invoices#due invoices","historyId":"06aea7b8928f80822bb01d9000b46023:1612e9a5a0972c6c67cc3fba9e7a2af9","time":{"start":1730664198508,"stop":1730664198576,"duration":68},"status":"failed","statusMessage":"Status code is 200, Respons returns the right data, Check invoice data","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Respons returns the right data, Check invoice data","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 200","time":{"start":1730664198571,"stop":1730664198571,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:1415)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Respons returns the right data","time":{"start":1730664198571,"stop":1730664198571,"duration":0},"status":"failed","statusMessage":"Target cannot be null or undefined.","statusTrace":"AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:2:1415)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check invoice data","time":{"start":1730664198572,"stop":1730664198572,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'invoices')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'invoices')\n   at Object.eval sandbox-script.js:3:1415)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8290004bb52cb470","name":"PreRequest","source":"8290004bb52cb470.txt","type":"text/plain","size":119},{"uid":"1a1d04e9d0cb715c","name":"Request Headers","source":"1a1d04e9d0cb715c.json","type":"application/json","size":524},{"uid":"91e3c1ba8a286e8a","name":"Response Headers","source":"91e3c1ba8a286e8a.json","type":"application/json","size":554},{"uid":"768e4e8c184e3ff6","name":"Response Body","source":"768e4e8c184e3ff6.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az720-793"},{"name":"thread","value":"pid-2144-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Invoicing"},{"name":"subSuite","value":"company > Due Invoices"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/?company=&invoice_type=DUE&page=1&size=20"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"9c382c6250395e1e","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/89//#testresult/9c382c6250395e1e","status":"failed","statusDetails":"Status code is 200, Respons returns the right data, Check invoice data","time":{"start":1730484453265,"stop":1730484453363,"duration":98}},{"uid":"2ce90c3033228e0c","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/88//#testresult/2ce90c3033228e0c","status":"failed","statusDetails":"Status code is 200, Respons returns the right data, Check invoice data","time":{"start":1730311509270,"stop":1730311509298,"duration":28}},{"uid":"8029a86ff889108d","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/87//#testresult/8029a86ff889108d","status":"failed","statusDetails":"Status code is 200, Respons returns the right data, Check invoice data","time":{"start":1730216787463,"stop":1730216787509,"duration":46}},{"uid":"ffa49ed326e537db","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/ffa49ed326e537db","status":"failed","statusDetails":"Status code is 200, Respons returns the right data, Check invoice data","time":{"start":1729841452335,"stop":1729841452400,"duration":65}}]},"tags":[]},"source":"924a32025b5ac347.json","parameterValues":["GET - https://requisitiondev.libertypayng.com/api/v1/invoicing/invoices/?company=&invoice_type=DUE&page=1&size=20","401"]}
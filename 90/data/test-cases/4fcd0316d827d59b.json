{"uid":"4fcd0316d827d59b","name":"sales table [Success]","fullName":"PayBox-360 - QA AUTOMATION/Sales/companies/Comparison/Sales table#sales table [Success]","historyId":"f056f124faffabacd4d885c90888243c:886151b487cc74fe11a3de1fbd004476","time":{"start":1730664223701,"stop":1730664223770,"duration":69},"status":"failed","statusMessage":"Status code is 200, Response status should be 'success', Response status code should be 200, Response should contain the correct success message, Sales data should contain correct information","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Response status should be 'success', Response status code should be 200, Response should contain the correct success message, Sales data should contain correct information","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 200","time":{"start":1730664223764,"stop":1730664223764,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:1752)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status should be 'success'","time":{"start":1730664223764,"stop":1730664223764,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:1752)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status code should be 200","time":{"start":1730664223765,"stop":1730664223765,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 200","statusTrace":"AssertionError: expected undefined to deeply equal 200\n   at Object.eval sandbox-script.js:3:1752)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response should contain the correct success message","time":{"start":1730664223765,"stop":1730664223765,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'message')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'message')\n   at Object.eval sandbox-script.js:4:1752)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Sales data should contain correct information","time":{"start":1730664223766,"stop":1730664223766,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'sales')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'sales')\n   at Object.eval sandbox-script.js:5:1752)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8bd4045a6305c278","name":"PreRequest","source":"8bd4045a6305c278.txt","type":"text/plain","size":119},{"uid":"97609df696ffdb18","name":"Request Headers","source":"97609df696ffdb18.json","type":"application/json","size":524},{"uid":"15fd253e20b2c941","name":"Response Headers","source":"15fd253e20b2c941.json","type":"application/json","size":548},{"uid":"34e9539df869b0f","name":"Response Body","source":"34e9539df869b0f.txt","type":"text/plain","size":183}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az720-793"},{"name":"thread","value":"pid-2144-worker-main"},{"name":"parentSuite","value":"PayBox-360 - QA AUTOMATION"},{"name":"suite","value":"Sales"},{"name":"subSuite","value":"companies > Comparison > Sales table"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://requisitiondev.libertypayng.com/api/v1/sales/history?company_id="},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"eb60c8f2de9f754f","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/89//#testresult/eb60c8f2de9f754f","status":"failed","statusDetails":"Status code is 200, Response status should be 'success', Response status code should be 200, Response should contain the correct success message, Sales data should contain correct information","time":{"start":1730484488325,"stop":1730484488427,"duration":102}},{"uid":"c982ebaec4981f1f","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/88//#testresult/c982ebaec4981f1f","status":"failed","statusDetails":"Status code is 200, Response status should be 'success', Response status code should be 200, Response should contain the correct success message, Sales data should contain correct information","time":{"start":1730311519977,"stop":1730311520012,"duration":35}},{"uid":"716e89bc7f68c06","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/87//#testresult/716e89bc7f68c06","status":"failed","statusDetails":"Status code is 200, Response status should be 'success', Response status code should be 200, Response should contain the correct success message, Sales data should contain correct information","time":{"start":1730216803632,"stop":1730216803675,"duration":43}},{"uid":"bcc99e3e126bf4e9","reportUrl":"https://assurdly.github.io/paybox360-main-api-automation/82//#testresult/bcc99e3e126bf4e9","status":"failed","statusDetails":"Status code is 200, Response status should be 'success', Response status code should be 200, Response should contain the correct success message, Sales data should contain correct information","time":{"start":1729841475879,"stop":1729841475945,"duration":66}}]},"tags":[]},"source":"4fcd0316d827d59b.json","parameterValues":["GET - https://requisitiondev.libertypayng.com/api/v1/sales/history?company_id=","401"]}